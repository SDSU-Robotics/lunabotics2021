-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.18363.
-- The C compiler identification is MSVC 19.16.27039.0
-- The CXX compiler identification is MSVC 19.16.27039.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/cl.exe - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/cl.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found ament_cmake: 0.9.6 (F:/dev/ros2_foxy/share/ament_cmake/cmake)
-- Found PythonInterp: C:/Python38/python.exe (found suitable version "3.8.3", minimum required is "3") 
-- Using PYTHON_EXECUTABLE: C:/Python38/python.exe
-- Override CMake install command with custom implementation using symlinks instead of copying resources
-- Found rclcpp: 2.1.0 (F:/dev/ros2_foxy/share/rclcpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_connext_c;rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Found rosidl_adapter: 1.0.1 (F:/dev/ros2_foxy/share/rosidl_adapter/cmake)
-- Could not find RTI Connext - skipping rosidl_typesupport_connext_c
-- Could not find RTI Connext - skipping rosidl_typesupport_connext_cpp
-- Found OpenSSL: optimized;C:/Program Files/OpenSSL-Win64/lib/VC/libcrypto64MD.lib;debug;C:/Program Files/OpenSSL-Win64/lib/VC/libcrypto64MDd.lib (found version "1.1.1g")  
-- Found FastRTPS: F:/dev/ros2_foxy/include  
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_connext_cpp;rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 1.0.1 (F:/dev/ros2_foxy/share/rmw_implementation_cmake/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Looking for pthread.h
-- Looking for pthread.h - not found
-- Found Threads: TRUE  
-- Found std_msgs: 2.0.3 (F:/dev/ros2_foxy/share/std_msgs/cmake)
-- Found ament_lint_auto: 0.9.5 (F:/dev/ros2_foxy/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: $<BUILD_INTERFACE:F:/dev/colcon_ws/src/lunabotics2021/include>
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: F:/dev/colcon_ws/src/lunabotics2021/build/lunabotics2021
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Checking Build System
  Building Custom Rule F:/dev/colcon_ws/src/lunabotics2021/CMakeLists.txt
  hello.cpp
hello.obj : error LNK2019: unresolved external symbol "int __cdecl ctre::phoenix::platform::can::SetCANInterface(char const *)" (?SetCANInterface@can@platform@phoenix@ctre@@YAHPEBD@Z) referenced in function main [F:\dev\colcon_ws\src\lunabotics2021\build\lunabotics2021\hello.vcxproj]
..\..\lib\x86-64\libCTRE_Phoenix.a : fatal error LNK1107: invalid or corrupt file: cannot read at 0x56FF0 [F:\dev\colcon_ws\src\lunabotics2021\build\lunabotics2021\hello.vcxproj]
  Building Custom Rule F:/dev/colcon_ws/src/lunabotics2021/CMakeLists.txt
  listen.cpp
  listen.vcxproj -> F:\dev\colcon_ws\src\lunabotics2021\build\lunabotics2021\Release\listen.exe
